version: '3'
services:
  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      SIGNING_KEY: ${SIGNING_KEY}
      SECRET_KEY: ${SECRET_KEY}
      SQL_ENGINE: ${SQL_ENGINE}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DEBUG: "true"
    volumes:
      - ./backend:/code/backend
      - ./backend/media:/code/media
      - ./front-end/public:/code/frontend

  nginx:
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/media:/code/media
  frontend:
    build: ./front-end
    command: npm start
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  media_volume:
